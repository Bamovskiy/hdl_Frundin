#-----------------------------------------------------------
# Vivado v2019.1 (64-bit)
# SW Build 2552052 on Fri May 24 14:49:42 MDT 2019
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
# Start of session at: Thu Oct  5 17:20:25 2023
# Process ID: 4204
# Current directory: D:/HDL/fpga/lab3/PWM
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent9836 D:\HDL\fpga\lab3\PWM\PWM.xpr
# Log file: D:/HDL/fpga/lab3/PWM/vivado.log
# Journal file: D:/HDL/fpga/lab3/PWM\vivado.jou
#-----------------------------------------------------------
start_gui
open_project D:/HDL/fpga/lab3/PWM/PWM.xpr
INFO: [Project 1-313] Project file moved from 'D:/Students/Frundin/HDL/PWM' since last save.
Scanning sources...
Finished scanning sources
CRITICAL WARNING: [Board 49-67] The board_part definition was not found for digilentinc.com:arty-a7-35:part0:1.0. This can happen sometimes when you use custom board part. You can resolve this issue by setting 'board.repoPaths' parameter, pointing to the location of custom board files. Valid board_part values can be retrieved with the 'get_board_parts' Tcl command.
INFO: [Project 1-230] Project 'PWM.xpr' upgraded for this version of Vivado.
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/Xilinx/Vivado/2019.1/data/ip'.
update_compile_order -fileset sources_1
write_project_tcl D:/HDL/fpga/lab3/pwm.tcl
INFO: [Vivado-projutils-8] Tcl script 'pwm.tcl' generated in output directory 'D:/HDL/fpga/lab3'

INFO: [Vivado-projutils-15] Please note that by default, the file path for the project source files were set wth respect to the 'origin_dir' variable in the
 generated script. When this script is executed from the output directory, these source files will be referenced with respect to this 'origin_dir' path value.
 In case this script was later moved to a different directory, the 'origin_dir' value must be set manually in the script with the path
 relative to the new output directory to make sure that the source files are referenced correctly from the original project. You can also set the
 'origin_dir' automatically by setting the 'origin_dir_loc' variable in the tcl shell before sourcing this generated script. The 'origin_dir_loc'
 variable should be set to the path relative to the new output directory. Alternatively, if you are sourcing the script from the Vivado command line,
 then set the origin dir using '-tclargs --origin_dir <path>'. For example, 'vivado -mode tcl -source pwm.tcl -tclargs --origin_dir ".."

WARNING: [Vivado-projutils-10] Found source(s) that were local or imported into the project. If this project is being source controlled, then
 please ensure that the project source(s) are also part of this source controlled data. The list of these local source(s) can be found in the generated script
 under the header section.

source D:/HDL/fpga/lab3/pwm.tcl
# set origin_dir "."
# if { [info exists ::origin_dir_loc] } {
#   set origin_dir $::origin_dir_loc
# }
# set _xil_proj_name_ "PWM"
# if { [info exists ::user_project_name] } {
#   set _xil_proj_name_ $::user_project_name
# }
# variable script_file
# set script_file "pwm.tcl"
# proc print_help {} {
#   variable script_file
#   puts "\nDescription:"
#   puts "Recreate a Vivado project from this script. The created project will be"
#   puts "functionally equivalent to the original project for which this script was"
#   puts "generated. The script contains commands for creating a project, filesets,"
#   puts "runs, adding/importing sources and setting properties on various objects.\n"
#   puts "Syntax:"
#   puts "$script_file"
#   puts "$script_file -tclargs \[--origin_dir <path>\]"
#   puts "$script_file -tclargs \[--project_name <name>\]"
#   puts "$script_file -tclargs \[--help\]\n"
#   puts "Usage:"
#   puts "Name                   Description"
#   puts "-------------------------------------------------------------------------"
#   puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
#   puts "                       origin_dir path value is \".\", otherwise, the value"
#   puts "                       that was set with the \"-paths_relative_to\" switch"
#   puts "                       when this script was generated.\n"
#   puts "\[--project_name <name>\] Create project with the specified name. Default"
#   puts "                       name is the name of the project from where this"
#   puts "                       script was generated.\n"
#   puts "\[--help\]               Print help information for this script"
#   puts "-------------------------------------------------------------------------\n"
#   exit 0
# }
# if { $::argc > 0 } {
#   for {set i 0} {$i < $::argc} {incr i} {
#     set option [string trim [lindex $::argv $i]]
#     switch -regexp -- $option {
#       "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
#       "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
#       "--help"         { print_help }
#       default {
#         if { [regexp {^-} $option] } {
#           puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
#           return 1
#         }
#       }
#     }
#   }
# }
# set orig_proj_dir "[file normalize "$origin_dir/PWM"]"
# create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a35ticsg324-1L
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/Xilinx/Vivado/2019.1/data/ip'.
# set proj_dir [get_property directory [current_project]]
# set obj [current_project]
# set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
# set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
# set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
# set_property -name "dsa.board_id" -value "arty-a7-35" -objects $obj
# set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
# set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
# set_property -name "dsa.emu_dir" -value "emu" -objects $obj
# set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
# set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
# set_property -name "dsa.flash_size" -value "1024" -objects $obj
# set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
# set_property -name "dsa.host_interface" -value "pcie" -objects $obj
# set_property -name "dsa.num_compute_units" -value "60" -objects $obj
# set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
# set_property -name "dsa.vendor" -value "xilinx" -objects $obj
# set_property -name "dsa.version" -value "0.0" -objects $obj
# set_property -name "enable_vhdl_2008" -value "1" -objects $obj
# set_property -name "ip_cache_permissions" -value "read write" -objects $obj
# set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
# set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
# set_property -name "part" -value "xc7a35ticsg324-1L" -objects $obj
# set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
# set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
# set_property -name "simulator_language" -value "Mixed" -objects $obj
# set_property -name "webtalk.xsim_launch_sim" -value "1" -objects $obj
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#   create_fileset -srcset sources_1
# }
# set obj [get_filesets sources_1]
# set files [list \
#  [file normalize "${origin_dir}/PWM.v"] \
# ]
# add_files -norecurse -fileset $obj $files
ERROR: [Vivado 12-172] File or Directory 'D:/HDL/fpga/lab3/PWM/PWM.v' does not exist
current_project PWM
sou
ERROR: [Common 17-163] Missing value for option 'file', please type 'source -help' for usage info.
source D:/HD
couldn't read file "D:/HD": no such file or directory
source D:/HDL/fpga/lab3/PWM.tcl
# set origin_dir "."
# if { [info exists ::origin_dir_loc] } {
#   set origin_dir $::origin_dir_loc
# }
# set _xil_proj_name_ "PWM"
# if { [info exists ::user_project_name] } {
#   set _xil_proj_name_ $::user_project_name
# }
# variable script_file
# set script_file "PWM.tcl"
# proc print_help {} {
#   variable script_file
#   puts "\nDescription:"
#   puts "Recreate a Vivado project from this script. The created project will be"
#   puts "functionally equivalent to the original project for which this script was"
#   puts "generated. The script contains commands for creating a project, filesets,"
#   puts "runs, adding/importing sources and setting properties on various objects.\n"
#   puts "Syntax:"
#   puts "$script_file"
#   puts "$script_file -tclargs \[--origin_dir <path>\]"
#   puts "$script_file -tclargs \[--project_name <name>\]"
#   puts "$script_file -tclargs \[--help\]\n"
#   puts "Usage:"
#   puts "Name                   Description"
#   puts "-------------------------------------------------------------------------"
#   puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
#   puts "                       origin_dir path value is \".\", otherwise, the value"
#   puts "                       that was set with the \"-paths_relative_to\" switch"
#   puts "                       when this script was generated.\n"
#   puts "\[--project_name <name>\] Create project with the specified name. Default"
#   puts "                       name is the name of the project from where this"
#   puts "                       script was generated.\n"
#   puts "\[--help\]               Print help information for this script"
#   puts "-------------------------------------------------------------------------\n"
#   exit 0
# }
# if { $::argc > 0 } {
#   for {set i 0} {$i < $::argc} {incr i} {
#     set option [string trim [lindex $::argv $i]]
#     switch -regexp -- $option {
#       "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
#       "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
#       "--help"         { print_help }
#       default {
#         if { [regexp {^-} $option] } {
#           puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
#           return 1
#         }
#       }
#     }
#   }
# }
# set orig_proj_dir "[file normalize "$origin_dir/"]"
# create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a35ticsg324-1L
ERROR: [Common 17-53] User Exception: Project already exists on disk, please use '-force' option to overwrite: 
     D:/HDL/fpga/lab3/PWM/PWM/PWM.xpr
     D:/HDL/fpga/lab3/PWM/PWM/PWM.sim
     D:/HDL/fpga/lab3/PWM/PWM/PWM.cache
     D:/HDL/fpga/lab3/PWM/PWM/PWM.hw
     D:/HDL/fpga/lab3/PWM/PWM/PWM.ip_user_files
close_project
exit
INFO: [Common 17-206] Exiting Vivado at Thu Oct  5 20:19:19 2023...
